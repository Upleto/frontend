{"version":3,"file":"static/webpack/static/development/pages/payment.js.1782f955fcb2ce8982a0.hot-update.js","sources":["webpack:///./src/components/Payment/index.tsx"],"sourcesContent":["import React, { FC, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport { useTable, useSortBy, usePagination, HeaderGroup } from 'react-table';\nimport { RenterPlusLoginState } from '../../redux/reducers/reducerCombo';\nimport { ConnectedProps } from '../../utils/redux/types';\nimport Link from '../Link';\nimport StyledPaymentHistoryDiv from './StyledPaymentHistoryDiv';\nimport { PaymentTransaction } from '../../redux/reducers/types';\n\n/* eslint-disable react/jsx-props-no-spreading */\n\nconst mapStateToProps = (state: RenterPlusLoginState) => ({\n  redirectTo: state?.payment?.redirectTo ?? '',\n  paymentHistory: state?.payment?.paymentHistory ?? {},\n  paymentAccountsInvolved: state?.payment?.paymentAccountsInvolved ?? {},\n});\n\ntype Props = ConnectedProps<typeof mapStateToProps>;\n\nconst Payment: FC<Props> = ({ redirectTo, paymentHistory, paymentAccountsInvolved }) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Payment History',\n        columns: [\n          {\n            Header: 'Time Stamp',\n            accessor: (row: PaymentTransaction) => row.timeStamp.calendar(),\n            id: 'date',\n          },\n          {\n            Header: 'Amount',\n            accessor: (row: PaymentTransaction) => `$${row.amount.toFixed(2)}`,\n            id: 'amount',\n          },\n          {\n            Header: 'From',\n            accessor: (row: PaymentTransaction) =>\n              paymentAccountsInvolved[row.fromPaymentAccountId].displayName,\n            id: 'fromAccountName',\n          },\n          {\n            Header: 'To',\n            accessor: (row: PaymentTransaction) =>\n              paymentAccountsInvolved[row.toPaymentAccountId].displayName,\n            id: 'toAccountName',\n          },\n          {\n            Header: 'Description',\n            accessor: 'description',\n          },\n        ],\n      },\n    ],\n    [paymentAccountsInvolved]\n  );\n\n  const data = useMemo(() => Object.values(paymentHistory), [paymentHistory]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    // canPreviousPage,\n    // canNextPage,\n    // pageOptions,\n    // pageCount,\n    // gotoPage,\n    // nextPage,\n    // previousPage,\n    // setPageSize,\n    // state: { pageIndex, pageSize },\n  } = useTable<PaymentTransaction>(\n    // @ts-ignore\n    { columns, data, initialState: { pageIndex: 0, pageSize: 2 } },\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <div>\n      <h2>Payment</h2>\n      {page.length && (\n        <StyledPaymentHistoryDiv>\n          <table {...getTableProps()}>\n            <thead>\n              {headerGroups.map((headerGroup: HeaderGroup<PaymentTransaction>) => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map((header: any) => (\n                    <th {...header.getHeaderProps()}>\n                      {header.render('Header')}\n                      <span>{(header.isSorted && (header.isSortedDesc ? 'ᐁ' : 'ᐃ')) || ''}</span>\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {page.map((row: any) => {\n                prepareRow(row);\n                return (\n                  <tr {...row.getRowProps()}>\n                    {row.cells.map((cell: any) => {\n                      return <td {...cell.getCellProps()}>{cell.value}</td>;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </StyledPaymentHistoryDiv>\n      )}\n\n      <Link href={redirectTo}>\n        <a>back</a>\n      </Link>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Payment);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;;;AAGA;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAEA;AAJA;AAOA;AACA;AAAA;AAAA;AAEA;AAJA;AAOA;AACA;AAFA;AAzBA;AADA;AAoCA;AAAA;AAAA;AACA;AAvCA;AAyDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzDA;AAAA;AAAA;AAAA;AAAA;AACA;AA6DA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAFA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}