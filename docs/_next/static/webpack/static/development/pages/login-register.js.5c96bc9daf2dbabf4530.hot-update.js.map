{"version":3,"file":"static/webpack/static/development/pages/login-register.js.5c96bc9daf2dbabf4530.hot-update.js","sources":["webpack:///./src/components/LoginRegister/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { css } from '@emotion/core';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport Link from '../Link';\nimport { RenterPlusLoginState } from '../../redux/reducers/reducerCombo';\nimport actionCreator from '../../utils/redux/actionCreator';\nimport ActionTypes from '../../redux/actions/ActionTypes';\nimport { ConnectedProps } from '../../utils/redux/types';\nimport rem from '../../utils/style/rem';\n// import user1 from '../../mock/user/user1';\n// import paymentTransactions from '../../mock/payment/paymentTransaction';\n// import account1 from '../../mock/account/account1';\n// import account2 from '../../mock/account/account2';\n// import { PaymentAccountForDisplayObjs } from '../../redux/reducers/types';\n\nconst LoginRegisterPageStyle = css`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  width: 80%;\n\n  & > input {\n    max-width: ${rem(200)};\n    height: ${rem(30)};\n  }\n`;\n\nconst mapStateToProps = (state: RenterPlusLoginState) => ({\n  redirectTo: state?.loginRegister?.redirectTo ?? '',\n  username: state?.loginRegister?.username ?? '',\n  password: state?.loginRegister?.password ?? '',\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  setUsername: actionCreator(dispatch, ActionTypes.UPDATE_USERNAME),\n  setPassword: actionCreator(dispatch, ActionTypes.UPDATE_PASSWORD),\n  setRedirectTo: actionCreator(dispatch, ActionTypes.UPDATE_LOGIN_REDIRECT_TO),\n  // setRenter: actionCreator(dispatch, ActionTypes.UPDATE_RENTER),\n  // setPaymentHistory: actionCreator(dispatch, ActionTypes.UPDATE_PAYMENT_HISTORY),\n  // setPaymentAccountsInvolved: actionCreator(dispatch, ActionTypes.UPDATE_PAYMENT_ACCOUNTS_INVOLVED),\n  renterLogin: actionCreator(dispatch, ActionTypes.RENTER_LOGIN),\n});\n\ntype Props = ConnectedProps<typeof mapStateToProps, typeof mapDispatchToProps>;\n\nconst LoginRegister: FC<Props> = ({\n  username,\n  password,\n  redirectTo,\n  setUsername,\n  setPassword,\n  setRedirectTo,\n  // setRenter,\n  // setPaymentHistory,\n  // setPaymentAccountsInvolved,\n  renterLogin,\n}) => {\n  return (\n    <div css={LoginRegisterPageStyle}>\n      <input\n        type=\"text\"\n        placeholder=\"username\"\n        value={username}\n        onChange={e => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"password\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n      />\n      <Link href={redirectTo}>\n        <a\n          onClick={() => {\n            // setRenter(user1);\n            // setPaymentHistory(Object.values(paymentTransactions));\n            // setPaymentAccountsInvolved(\n            //   [account1, account2].reduce<PaymentAccountForDisplayObjs>(\n            //     (paymentAccountForDisplays, { id, ownerId }) => ({\n            //       ...paymentAccountForDisplays,\n            //       [id]: {\n            //         id,\n            //         ownerId,\n            //         displayName: `Account_${id}`,\n            //       },\n            //     }),\n            //     {}\n            //   )\n            // );\n            renterLogin(null);\n            setRedirectTo('');\n          }}\n        >\n          Login\n        </a>\n      </Link>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginRegister);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AAWA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AACA;AAWA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AACA;AACA;;;;A","sourceRoot":""}